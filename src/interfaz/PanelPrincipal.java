/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import Tablas.TablaSimbolos;
import assembler.Generacion;
import assembler.Objetos;
import cuartetos.CreacionCodigo;
import cuartetos.CreacionEjecutable;
import cuartetos.Nodo;
import ejecutable.Tabla;
import gramaticaC.AnalizadorLexico4;
import gramaticaC.SintaxC;
import gramaticaJAVA.AnalizadorLexico;
import gramaticaJAVA.SintaxJAVA;
import gramaticaPYTHON.AnalizadorLexico2;
import gramaticaPYTHON.SintaxPYTHON;
import gramaticaVB.AnalizadorLexico3;
import gramaticaVB.SintaxVB;
import guardado.Guardado;
import hojas.NumeracionLineas;
import java.io.IOException;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import objetosApoyo.DatosGuardado;
import operacionesInterfaz.NuevaHoja;

/**
 *
 * @author luisGonzalez
 */
public class PanelPrincipal extends javax.swing.JPanel {

    private NuevaHoja nueva = new NuevaHoja();
    
    private NumeracionLineas numeracion;
    private NumeracionLineas numeracion2;
    private TablaSimbolos tabla = new TablaSimbolos();
    private ManejoTexto divTexto = new ManejoTexto();
    public static int totalLineas = 0;
    public static int lineasVb = 0;
    public static int lineasPython = 0;
    public static int lineasJava = 0;
    public static int lineasC = 0;

    private String codigo = "";
    private String codExe = "";
    private ArrayList<Nodo> cuarpeta = new ArrayList<>();
    private ArrayList<Nodo> ejecutable = new ArrayList<>();

    private CreacionCodigo creacion = new CreacionCodigo();
    private CreacionEjecutable creacion2 = new CreacionEjecutable();
    private Generacion assembler = new Generacion();

    public static String codigoPython = "";
    public static String codigoJava = "";
    public static String codigoVb = "";
    public static String codigoC = "";
    
    private Guardado guardar = new Guardado();

    public static String errores = "";
    private String path, path2;
    private ArrayList<DatosGuardado> datos = new ArrayList<>();
    private int itTab;
    private JTabbedPane tab;
    
    /**
     * Creates new form PanelPrincipal
     */
    public PanelPrincipal(String texto, String path, ArrayList<DatosGuardado> datos, int itTab, JTabbedPane tab, String path2) {
        initComponents();
        txtTexto.setText(texto);
        this.datos = datos;
        this.tab = tab;
        this.itTab = itTab;
        this.path = path;
        this.path2 = path2;
        if (datos.size() <= itTab) {
            datos.add(new DatosGuardado(texto, path));
        } else {
            datos.set(itTab, new DatosGuardado(texto, path));
        }
        numeracion = new NumeracionLineas(txtTexto);
        jScrollPane1.setRowHeaderView(numeracion);
        numeracion2 = new NumeracionLineas(txt3d);
        jScrollPane2.setRowHeaderView(numeracion2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtTexto = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt3d = new javax.swing.JTextArea();
        btnErrores = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        txtTexto.setColumns(20);
        txtTexto.setRows(5);
        jScrollPane1.setViewportView(txtTexto);

        jButton1.setText("Traducir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txt3d.setColumns(20);
        txt3d.setRows(5);
        jScrollPane2.setViewportView(txt3d);

        btnErrores.setText("Errores");
        btnErrores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnErroresActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnErrores, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btnErrores)
                    .addComponent(jButton2))
                .addGap(23, 23, 23))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        reiniciarDatos();
        tabla = new TablaSimbolos();
        cuarpeta = new ArrayList<>();
        ejecutable = new ArrayList<>();
        datos.set(itTab, new DatosGuardado(txtTexto.getText(), path));
        divTexto.manejarTexto(tabla, txtTexto.getText());
        AnalizadorLexico lexer = new AnalizadorLexico(new StringReader(codigoJava));

        AnalizadorLexico2 lexer2 = new AnalizadorLexico2(new StringReader(codigoPython));

        AnalizadorLexico3 lexer3 = new AnalizadorLexico3(new StringReader(codigoVb));

        AnalizadorLexico4 lexer4 = new AnalizadorLexico4(new StringReader(codigoC));
        try {
            totalLineas = 1;
            new SintaxVB(lexer3, tabla).parse();
            totalLineas = lineasVb;
            divTexto.sumarVariablesJava(tabla);
            new SintaxJAVA(lexer, tabla).parse();
            totalLineas = totalLineas + lineasJava;
            divTexto.sumarVariablesPython(tabla);
            new SintaxPYTHON(lexer2, tabla).parse();
            totalLineas = totalLineas + lineasPython;
            divTexto.sumarVariablesC(tabla);
            new SintaxC(lexer4, tabla).parse();
         
            creacion.unificarCuarpetas(cuarpeta, tabla);
            codigo = creacion.crearCodigo(cuarpeta);
            codExe = creacion2.crearEjecutable(ejecutable, cuarpeta, tabla.getObC().getContVars());
            if(errores.equals("")){
                
                
                //creacion codigo 3D
                Panel3D panel1 = new Panel3D(codigo);
                tab.addTab("3D", panel1);
                tab.setTabComponentAt(tab.getTabCount()-1, nueva.crearCabecera("3D", tab));
                
                //creacion codigo ejecutable
                String[] arreglo = path.split("/");
                String[] arreglo2 = arreglo[arreglo.length-1].split("\\.");
                String nombre = arreglo2[0]+".cpp";
                String direccion = path2+"/"+nombre;
                guardar.crearEjecutable(direccion, codExe);
                PanelEjecutable panel2 = new PanelEjecutable(direccion, arreglo2[0]);
                tab.addTab("exe", panel2);
                tab.setTabComponentAt(tab.getTabCount()-1, nueva.crearCabecera("exe", tab));
               
                //creacion codigo Asembler
                ArrayList<Objetos> obAssembler = new ArrayList<>();
                String nombreAs = arreglo2[0]+".asm";
                String direccionAs = path2+"/"+nombreAs;
                String codAssembler = assembler.codigoFormal(ejecutable, obAssembler);
                guardar.crearAssembler(direccionAs, codAssembler);
                PanelAssembler panel3 = new PanelAssembler(direccionAs, arreglo2[0]);
                tab.addTab("assembler", panel3);
                tab.setTabComponentAt(tab.getTabCount()-1, nueva.crearCabecera("asembler", tab));
                
                txt3d.setText(codExe);
            } else {
                JOptionPane.showMessageDialog(null, "Error en la gramatica, por favor verifica la ventana de errores");
            }
            codigo = "";
            codExe = "";

        } catch (Exception ex) {
            Logger.getLogger(PanelPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnErroresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnErroresActionPerformed
        Errores error = new Errores(null, true, errores);
        error.setVisible(true);
    }//GEN-LAST:event_btnErroresActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
   
    }//GEN-LAST:event_jButton2ActionPerformed

    public void reiniciarDatos() {
        totalLineas = 0;
        lineasC = 0;
        lineasJava = 0;
        lineasPython = 0;
        lineasVb = 0;
        codigoPython = "";
        codigoC = "";
        codigoPython = "";
        codigoVb = "";
        codigoJava = "";
        codigo = "";
        errores = "";
        txt3d.setText("");
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnErrores;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txt3d;
    private javax.swing.JTextArea txtTexto;
    // End of variables declaration//GEN-END:variables
}
